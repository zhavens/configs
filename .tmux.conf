# SET VERSION ENV VAR
# =====================================
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                            sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
display-message "tmux version: $TMUX_VERSION"

# KEY BINDINGS 
# =====================================
set -g prefix C-space

set -g default-terminal "xterm-256color"

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-S-Right next-window
bind -n M-S-Left previous-window
bind < swap-window -t -1
bind > swap-window -t +1
# bind -n C-Tab next-window
# bind -n C-S-Tab previous-window

bind % split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
# bind | run-shell 'history -a' \; split-window -h
# bind '"' run-shell 'history -a' \; split-window -v

bind -n C-PgUp copy-mode -u
bind -n C-PgDn copy-mode
bind PgUp copy-mode -u

# Vim-likes
set -g mode-keys vi
set -g status-keys vi
bind p paste-buffer
# Bind syntax changed in 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
  bind-key -t vi-copy v   begin-selection; \
  bind-key -t vi-copy V   send -X select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-copy y   copy-selection"
  #  bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
  bind-key -T copy-mode-vi v   send -X begin-selection; \
  bind-key -T copy-mode-vi V   send -X select-line; \
  bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
  bind-key -T copy-mode-vi y   send -X copy-selection"
  #  bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"
bind-key r source-file ~/.tmux.conf \; display "Config reloaded."

# MOUSE OPTIONS 
# =====================================
# Mouse commands changed in 2.1
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on;"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# WINDOW OPTIONS 
# =====================================
NARROW_WINDOW_WITDH=200

set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# PANE COLOURS 
# =====================================
# Style format changed in 2.9
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
  set -g pane-border-bg default; \
  set -g pane-border-fg colour6; \
  set -g pane-active-border-bg default; \
  set -g pane-active-border-fg colour50; \
  set -g message-fg colour250; \
  set -g message-bg colour235; \
  setw -g mode-fg colour250; \
  setw -g mode-bg colour235; \
  "
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' " \
  set -g pane-border-style bg=default,fg=colour6; \
  set -g pane-active-border-style bg=default,fg=colour50; \
  setw -g message-style fg=colour250,bg=colour235; \
  setw -g mode-style fg=colour250,bg=colour235; \
  "

# STATUS BARS
# =====================================
set -g status-justify left
set -g status-interval 5

# Window status
setw -g window-status-format '#I#[fg=colour250]:#W#[fg=colour138]#F'
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
# Left status
set -g status-left-length 20
set -g status-left "[#S] "
# Right status (conditional on size)
set -g status-right-length 60
set -g status-right "#{?#(echo $((#{window_width}>$NARROW_WINDOW_WITDH?1:0))),[#(whoami)@#h:#(hostname -i) | %H:%M %x],[ %H:%M %x ]}"

# Style format changed in 2.9
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
  set -g status-bg colour235; \
  set -g status-fg colour37; \
  set -g window-status-fg colour30; \
  set -g window-status-bg colour235; \
  set -g window-status-attr none; \
  set -g window-status-current-fg colour50; \
  set -g window-status-current-bg colour238; \
  set -g window-status-current-attr bold; \
  "
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' " \
  set -g status-style fg=colour37,bg=colour235; \
  set -g window-status-style fg=colour30,bg=colour235; \
  set -g window-status-current-style bold,fg=colour50,bg=colour238; \
  "

# HISTORY
# =====================================
set -g history-limit 50000
# To have all tmux panes share history:
# run-shell export PROMPT_COMMAND='history -a; history -r;

# MISC
# =====================================
# Fix issues with escape being used as a META key
set -s escape-time 0

# PLUGINS
# =====================================

# Installing TPM (tmux 1.9 or higher)
#   # Install TPM
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   # Let TPM install plugins
#   <prefix>-I

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'off'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'off'
set -g @continuum-save-interval '30'

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


